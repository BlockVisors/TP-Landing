{"version":3,"file":"static/webpack/static/development/pages/index.js.6aaa405d22f8a62e3d84.hot-update.js","sources":["webpack:////Users/dameongreen/Downloads/SuperProps/SuperProps/node_modules/babel-runtime/helpers/objectWithoutProperties.js","webpack:////Users/dameongreen/Downloads/SuperProps/SuperProps/node_modules/common/src/containers/Portfolio/Skill/index.js","webpack:////Users/dameongreen/Downloads/SuperProps/SuperProps/node_modules/common/src/containers/Portfolio/Skill/skill.style.js","webpack:////Users/dameongreen/Downloads/SuperProps/SuperProps/node_modules/rc-progress/es/Circle.js","webpack:////Users/dameongreen/Downloads/SuperProps/SuperProps/node_modules/rc-progress/es/Line.js","webpack:////Users/dameongreen/Downloads/SuperProps/SuperProps/node_modules/rc-progress/es/enhancer.js","webpack:////Users/dameongreen/Downloads/SuperProps/SuperProps/node_modules/rc-progress/es/index.js","webpack:////Users/dameongreen/Downloads/SuperProps/SuperProps/node_modules/rc-progress/es/types.js","webpack:////Users/dameongreen/Downloads/SuperProps/SuperProps/node_modules/react-icons-kit/md/ic_thumb_up.js","webpack:///./pages/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Line } from 'rc-progress';\r\nimport { Icon } from 'react-icons-kit';\r\nimport Box from 'reusecore/src/elements/Box';\r\nimport Text from 'reusecore/src/elements/Text';\r\nimport Heading from 'reusecore/src/elements/Heading';\r\nimport Image from 'reusecore/src/elements/Image';\r\nimport Container from '../../../components/UI/Container';\r\n\r\nimport {\r\n  SkillItem,\r\n  SkillDetails,\r\n  SkillProgress,\r\n  SuccessRate,\r\n  ProgressBar,\r\n  SkillIcon,\r\n  SkillAbout,\r\n} from './skill.style';\r\nimport { SKILLS } from '../../../data/Portfolio/data';\r\nimport { ic_thumb_up } from 'react-icons-kit/md/ic_thumb_up';\r\n\r\nconst SkillSection = ({\r\n  sectionWrapper,\r\n  secTitleWrapper,\r\n  secTitle,\r\n  secDescription,\r\n  row,\r\n  col,\r\n  skillTitle,\r\n  skillDescription,\r\n  skillSuccessRate,\r\n  successRateText,\r\n}) => {\r\n  return (\r\n    <Box {...sectionWrapper} as=\"section\">\r\n      <Container noGutter mobileGutter width=\"1200px\">\r\n        <Box {...secTitleWrapper}>\r\n          <Heading {...secTitle} content=\"Ways I can help you\" />\r\n          <Text\r\n            {...secDescription}\r\n            content=\"Have a look, some could be interesting to help you achieve your business goals or start that project you always wanted to do... Yes, that one!\"\r\n          />\r\n        </Box>\r\n\r\n        <Box {...row}>\r\n          {SKILLS.map((item, index) => (\r\n            <Box {...col} key={`skill-item-${index}`}>\r\n              <SkillItem>\r\n                <SkillDetails>\r\n                  <SkillIcon>\r\n                    <Image src={item.icon} alt={`skill-icon-${index + 1}`} />\r\n                  </SkillIcon>\r\n                  <SkillAbout>\r\n                    <Heading content={item.title} {...skillTitle} />\r\n                    <Text content={item.description} {...skillDescription} />\r\n                  </SkillAbout>\r\n                </SkillDetails>\r\n                <SkillProgress>\r\n                  <SuccessRate>\r\n                    <Icon\r\n                      icon={ic_thumb_up}\r\n                      size={12}\r\n                      className=\"skill_success_icon\"\r\n                    />\r\n                    <Text\r\n                      as=\"span\"\r\n                      content={`${item.successRate}% `}\r\n                      {...skillSuccessRate}\r\n                    />\r\n                    <Text\r\n                      as=\"span\"\r\n                      content=\"Success Rate\"\r\n                      {...skillSuccessRate}\r\n                      {...successRateText}\r\n                    />\r\n                  </SuccessRate>\r\n                  <ProgressBar>\r\n                    <Line\r\n                      percent={item.successRate}\r\n                      strokeWidth=\"1.8\"\r\n                      trailWidth=\"1.8\"\r\n                      strokeColor=\"#3444f1\"\r\n                      trailColor=\"#e3e7f2\"\r\n                    />\r\n                  </ProgressBar>\r\n                </SkillProgress>\r\n              </SkillItem>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nSkillSection.propTypes = {\r\n  sectionWrapper: PropTypes.object,\r\n  secTitleWrapper: PropTypes.object,\r\n  secTitle: PropTypes.object,\r\n  secDescription: PropTypes.object,\r\n  row: PropTypes.object,\r\n  col: PropTypes.object,\r\n  skillTitle: PropTypes.object,\r\n  skillDescription: PropTypes.object,\r\n  skillSuccessRate: PropTypes.object,\r\n  successRateText: PropTypes.object,\r\n};\r\n\r\nSkillSection.defaultProps = {\r\n  sectionWrapper: {\r\n    pt: ['60px', '80px', '100px', '110px', '140px'],\r\n    pb: ['150px', '160px', '160px', '180px', '210px'],\r\n    bg: '#f9f9f9',\r\n  },\r\n  secTitleWrapper: {\r\n    mb: ['65px', '65px', '80px', '90px', '105px'],\r\n  },\r\n  secTitle: {\r\n    fontSize: ['22px', '26px', '26px', '30px', '30px'],\r\n    fontWeight: '700',\r\n    color: '#302b4e',\r\n    lineHeight: '1.34',\r\n    mb: ['15px', '18px', '18px', '20px', '20px'],\r\n    textAlign: 'center',\r\n  },\r\n  secDescription: {\r\n    fontSize: ['15px', '16px'],\r\n    fontWeight: '400',\r\n    color: '#43414e',\r\n    lineHeight: '1.5',\r\n    mb: '0',\r\n    textAlign: 'center',\r\n    width: '600px',\r\n    maxWidth: '100%',\r\n    ml: 'auto',\r\n    mr: 'auto',\r\n  },\r\n  row: {\r\n    flexBox: true,\r\n    flexWrap: 'wrap',\r\n    ml: ['-15px', '-15px', '-15px', '-25px', '-25px'],\r\n    mr: ['-15px', '-15px', '-15px', '-25px', '-25px'],\r\n  },\r\n  col: {\r\n    width: [1, 1, 1 / 2],\r\n    pl: ['15px', '15px', '15px', '25px', '25px'],\r\n    pr: ['15px', '15px', '15px', '25px', '25px'],\r\n    mb: ['30px', '30px', '30px', '50px', '50px'],\r\n  },\r\n  skillTitle: {\r\n    fontSize: ['16px', '18px', '18px', '20px', '20px'],\r\n    fontWeight: '600',\r\n    color: '#302b4e',\r\n    mb: '12px',\r\n  },\r\n  skillDescription: {\r\n    fontSize: ['15px', '15px', '15px', '16px', '16px'],\r\n    fontWeight: '400',\r\n    color: '#43414e',\r\n    lineHeight: '1.5',\r\n    mb: '0',\r\n  },\r\n  skillSuccessRate: {\r\n    fontSize: ['15px', '15px', '14px', '15px', '16px'],\r\n    fontWeight: '400',\r\n    color: '#302b4e',\r\n    lineHeight: '1.5',\r\n    mb: '0',\r\n  },\r\n  successRateText: {\r\n    ml: '.3em',\r\n    display: ['none', 'none', 'none', 'none', 'inline-block'],\r\n  },\r\n};\r\n\r\nexport default SkillSection;\r\n","import styled from 'styled-components';\r\n\r\nexport const SkillItem = styled.div`\r\n  position: relative;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0.521px 2.954px 50px 0px rgba(101, 106, 160, 0.1);\r\n`;\r\n\r\nexport const SkillDetails = styled.div`\r\n  padding: 85px 60px 55px 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  @media (max-width: 1199px) {\r\n    padding: 70px 45px 40px 45px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 60px 35px 30px 35px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 35px 25px 20px 25px;\r\n  }\r\n`;\r\n\r\nexport const SkillIcon = styled.div`\r\n  flex: 0 0 130px;\r\n  max-width: 130px;\r\n  @media (max-width: 990px) {\r\n    flex: 0 0 55px;\r\n    max-width: 55px;\r\n    margin-right: 30px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    flex: 0 0 45px;\r\n    max-width: 45px;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nexport const SkillAbout = styled.div``;\r\n\r\nexport const SkillProgress = styled.div`\r\n  padding: 20px 50px 28px 50px;\r\n  border-top: 1px solid #f7f7f7;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  @media (max-width: 1199px) {\r\n    padding: 20px 30px 28px 30px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 15px 20px 18px 20px;\r\n  }\r\n`;\r\n\r\nexport const SuccessRate = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  .skill_success_icon {\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background-color: #407fff;\r\n    overflow: hidden;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    color: #fff;\r\n    margin-right: 10px;\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\n\r\nexport const ProgressBar = styled.div`\r\n  flex: 0 0 58%;\r\n  max-width: 58%;\r\n  @media (max-width: 1199px) {\r\n    flex: 0 0 70%;\r\n    max-width: 70%;\r\n  }\r\n\r\n  > svg {\r\n    vertical-align: middle;\r\n  }\r\n`;\r\n","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* eslint react/prop-types: 0 */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport enhancer from './enhancer';\nimport { propTypes, defaultProps } from './types';\n\nvar Circle = function (_Component) {\n  _inherits(Circle, _Component);\n\n  function Circle() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Circle);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.paths = {}, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Circle.prototype.getPathStyles = function getPathStyles(offset, percent, strokeColor, strokeWidth) {\n    var gapDegree = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var gapPosition = arguments[5];\n\n    var radius = 50 - strokeWidth / 2;\n    var beginPositionX = 0;\n    var beginPositionY = -radius;\n    var endPositionX = 0;\n    var endPositionY = -2 * radius;\n    switch (gapPosition) {\n      case 'left':\n        beginPositionX = -radius;\n        beginPositionY = 0;\n        endPositionX = 2 * radius;\n        endPositionY = 0;\n        break;\n      case 'right':\n        beginPositionX = radius;\n        beginPositionY = 0;\n        endPositionX = -2 * radius;\n        endPositionY = 0;\n        break;\n      case 'bottom':\n        beginPositionY = radius;\n        endPositionY = 2 * radius;\n        break;\n      default:\n    }\n    var pathString = 'M 50,50 m ' + beginPositionX + ',' + beginPositionY + '\\n     a ' + radius + ',' + radius + ' 0 1 1 ' + endPositionX + ',' + -endPositionY + '\\n     a ' + radius + ',' + radius + ' 0 1 1 ' + -endPositionX + ',' + endPositionY;\n    var len = Math.PI * 2 * radius;\n\n    var pathStyle = {\n      stroke: strokeColor,\n      strokeDasharray: percent / 100 * (len - gapDegree) + 'px ' + len + 'px',\n      strokeDashoffset: '-' + (gapDegree / 2 + offset / 100 * (len - gapDegree)) + 'px',\n      transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s' // eslint-disable-line\n    };\n\n    return {\n      pathString: pathString,\n      pathStyle: pathStyle\n    };\n  };\n\n  Circle.prototype.getStokeList = function getStokeList() {\n    var _this2 = this;\n\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        percent = _props.percent,\n        strokeColor = _props.strokeColor,\n        strokeWidth = _props.strokeWidth,\n        strokeLinecap = _props.strokeLinecap,\n        gapDegree = _props.gapDegree,\n        gapPosition = _props.gapPosition;\n\n    var percentList = Array.isArray(percent) ? percent : [percent];\n    var strokeColorList = Array.isArray(strokeColor) ? strokeColor : [strokeColor];\n\n    var stackPtg = 0;\n    return percentList.map(function (ptg, index) {\n      var color = strokeColorList[index] || strokeColorList[strokeColorList.length - 1];\n\n      var _getPathStyles = _this2.getPathStyles(stackPtg, ptg, color, strokeWidth, gapDegree, gapPosition),\n          pathString = _getPathStyles.pathString,\n          pathStyle = _getPathStyles.pathStyle;\n\n      stackPtg += ptg;\n\n      return React.createElement('path', {\n        key: index,\n        className: prefixCls + '-circle-path',\n        d: pathString,\n        strokeLinecap: strokeLinecap,\n        strokeWidth: ptg === 0 ? 0 : strokeWidth,\n        fillOpacity: '0',\n        style: pathStyle,\n        ref: function ref(path) {\n          _this2.paths[index] = path;\n        }\n      });\n    });\n  };\n\n  Circle.prototype.render = function render() {\n    var _props2 = this.props,\n        prefixCls = _props2.prefixCls,\n        strokeWidth = _props2.strokeWidth,\n        trailWidth = _props2.trailWidth,\n        gapDegree = _props2.gapDegree,\n        gapPosition = _props2.gapPosition,\n        trailColor = _props2.trailColor,\n        strokeLinecap = _props2.strokeLinecap,\n        style = _props2.style,\n        className = _props2.className,\n        restProps = _objectWithoutProperties(_props2, ['prefixCls', 'strokeWidth', 'trailWidth', 'gapDegree', 'gapPosition', 'trailColor', 'strokeLinecap', 'style', 'className']);\n\n    var _getPathStyles2 = this.getPathStyles(0, 100, trailColor, strokeWidth, gapDegree, gapPosition),\n        pathString = _getPathStyles2.pathString,\n        pathStyle = _getPathStyles2.pathStyle;\n\n    delete restProps.percent;\n    delete restProps.strokeColor;\n    return React.createElement(\n      'svg',\n      _extends({\n        className: prefixCls + '-circle ' + className,\n        viewBox: '0 0 100 100',\n        style: style\n      }, restProps),\n      React.createElement('path', {\n        className: prefixCls + '-circle-trail',\n        d: pathString,\n        stroke: trailColor,\n        strokeLinecap: strokeLinecap,\n        strokeWidth: trailWidth || strokeWidth,\n        fillOpacity: '0',\n        style: pathStyle\n      }),\n      this.getStokeList()\n    );\n  };\n\n  return Circle;\n}(Component);\n\nCircle.propTypes = _extends({}, propTypes, {\n  gapPosition: PropTypes.oneOf(['top', 'bottom', 'left', 'right'])\n});\n\nCircle.defaultProps = _extends({}, defaultProps, {\n  gapPosition: 'top'\n});\n\nexport default enhancer(Circle);","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport enhancer from './enhancer';\nimport { propTypes, defaultProps } from './types';\n\nvar Line = function (_Component) {\n  _inherits(Line, _Component);\n\n  function Line() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Line);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.paths = {}, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Line.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        className = _props.className,\n        percent = _props.percent,\n        prefixCls = _props.prefixCls,\n        strokeColor = _props.strokeColor,\n        strokeLinecap = _props.strokeLinecap,\n        strokeWidth = _props.strokeWidth,\n        style = _props.style,\n        trailColor = _props.trailColor,\n        trailWidth = _props.trailWidth,\n        restProps = _objectWithoutProperties(_props, ['className', 'percent', 'prefixCls', 'strokeColor', 'strokeLinecap', 'strokeWidth', 'style', 'trailColor', 'trailWidth']);\n\n    delete restProps.gapPosition;\n\n    var percentList = Array.isArray(percent) ? percent : [percent];\n    var strokeColorList = Array.isArray(strokeColor) ? strokeColor : [strokeColor];\n\n    var center = strokeWidth / 2;\n    var right = 100 - strokeWidth / 2;\n    var pathString = 'M ' + (strokeLinecap === 'round' ? center : 0) + ',' + center + '\\n           L ' + (strokeLinecap === 'round' ? right : 100) + ',' + center;\n    var viewBoxString = '0 0 100 ' + strokeWidth;\n\n    var stackPtg = 0;\n\n    return React.createElement(\n      'svg',\n      _extends({\n        className: prefixCls + '-line ' + className,\n        viewBox: viewBoxString,\n        preserveAspectRatio: 'none',\n        style: style\n      }, restProps),\n      React.createElement('path', {\n        className: prefixCls + '-line-trail',\n        d: pathString,\n        strokeLinecap: strokeLinecap,\n        stroke: trailColor,\n        strokeWidth: trailWidth || strokeWidth,\n        fillOpacity: '0'\n      }),\n      percentList.map(function (ptg, index) {\n        var pathStyle = {\n          strokeDasharray: ptg + 'px, 100px',\n          strokeDashoffset: '-' + stackPtg + 'px',\n          transition: 'stroke-dashoffset 0.3s ease 0s, stroke-dasharray .3s ease 0s, stroke 0.3s linear'\n        };\n        var color = strokeColorList[index] || strokeColorList[strokeColorList.length - 1];\n\n        stackPtg += ptg;\n\n        return React.createElement('path', {\n          key: index,\n          className: prefixCls + '-line-path',\n          d: pathString,\n          strokeLinecap: strokeLinecap,\n          stroke: color,\n          strokeWidth: strokeWidth,\n          fillOpacity: '0',\n          ref: function ref(path) {\n            _this2.paths[index] = path;\n          },\n          style: pathStyle\n        });\n      })\n    );\n  };\n\n  return Line;\n}(Component);\n\nLine.propTypes = propTypes;\n\nLine.defaultProps = defaultProps;\n\nexport default enhancer(Line);","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nvar enhancer = function enhancer(WrappedComponent) {\n  return function (_WrappedComponent) {\n    _inherits(Progress, _WrappedComponent);\n\n    function Progress() {\n      _classCallCheck(this, Progress);\n\n      return _possibleConstructorReturn(this, _WrappedComponent.apply(this, arguments));\n    }\n\n    Progress.prototype.componentDidUpdate = function componentDidUpdate() {\n      var _this2 = this;\n\n      var now = Date.now();\n      var updated = false;\n\n      Object.keys(this.paths).forEach(function (key) {\n        var path = _this2.paths[key];\n\n        if (!path) {\n          return;\n        }\n\n        updated = true;\n        var pathStyle = path.style;\n        pathStyle.transitionDuration = '.3s, .3s, .3s, .06s';\n\n        if (_this2.prevTimeStamp && now - _this2.prevTimeStamp < 100) {\n          pathStyle.transitionDuration = '0s, 0s';\n        }\n      });\n\n      if (updated) {\n        this.prevTimeStamp = Date.now();\n      }\n    };\n\n    Progress.prototype.render = function render() {\n      return _WrappedComponent.prototype.render.call(this);\n    };\n\n    return Progress;\n  }(WrappedComponent);\n};\n\nexport default enhancer;","import Line from './Line';\nimport Circle from './Circle';\n\nexport { Line, Circle };\n\nexport default {\n  Line: Line,\n  Circle: Circle\n};","import PropTypes from 'prop-types';\n\nexport var defaultProps = {\n  className: '',\n  percent: 0,\n  prefixCls: 'rc-progress',\n  strokeColor: '#2db7f5',\n  strokeLinecap: 'round',\n  strokeWidth: 1,\n  style: {},\n  trailColor: '#D9D9D9',\n  trailWidth: 1\n};\n\nvar mixedType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nexport var propTypes = {\n  className: PropTypes.string,\n  percent: PropTypes.oneOfType([mixedType, PropTypes.arrayOf(mixedType)]),\n  prefixCls: PropTypes.string,\n  strokeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  strokeLinecap: PropTypes.oneOf(['butt', 'round', 'square']),\n  strokeWidth: mixedType,\n  style: PropTypes.object,\n  trailColor: PropTypes.string,\n  trailWidth: mixedType\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ic_thumb_up = exports.ic_thumb_up = { \"viewBox\": \"0 0 24 24\", \"children\": [{ \"name\": \"path\", \"attribs\": { \"d\": \"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z\" } }] };","import React, { Fragment } from 'react';\r\nimport Head from 'next/head';\r\nimport Sticky from 'react-stickynode';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { saasTheme } from 'common/src/theme/saas';\r\nimport { ResetCSS } from 'common/src/assets/css/style';\r\nimport {\r\n  GlobalStyle,\r\n  ContentWrapper,\r\n} from 'common/src/containers/Saas/saas.style';\r\nimport Navbar from 'common/src/containers/Saas/Navbar';\r\nimport BannerSection from 'common/src/containers/Saas/BannerSection';\r\nimport FeatureSection from 'common/src/containers/Saas/FeatureSection';\r\nimport VisitorSection from 'common/src/containers/Saas/VisitorSection';\r\nimport ServiceSection from 'common/src/containers/Saas/ServiceSection';\r\nimport FaqSection from 'common/src/containers/Saas/FaqSection';\r\nimport Footer from 'common/src/containers/Saas/Footer';\r\nimport PricingSection from 'common/src/containers/Saas/PricingSection';\r\nimport TrialSection from 'common/src/containers/Saas/TrialSection';\r\nimport TimelineSection from 'common/src/containers/Saas/TimelineSection';\r\nimport TestimonialSection from 'common/src/containers/Saas/TestimonialSection';\r\nimport PartnerSection from 'common/src/containers/Saas/PartnerSection';\r\nimport { DrawerProvider } from 'common/src/contexts/DrawerContext';\r\nimport ProcessSection from 'common/src/containers/Portfolio/Process';\r\nimport SkillSection from 'common/src/containers/Portfolio/Skill';\r\n\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <ThemeProvider theme={saasTheme}>\r\n      <Fragment>\r\n        <Head>\r\n          <title>Token Prop | Property Tokenization & Investment Platform</title>\r\n          <meta name=\"Description\" content=\"React next landing page\" />\r\n          <meta name=\"theme-color\" content=\"#ec5555\" />\r\n          {/* Load google fonts */}\r\n          <link\r\n            href=\"https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i\"\r\n            rel=\"stylesheet\"\r\n          />\r\n        </Head>\r\n        <ResetCSS />\r\n        <GlobalStyle />\r\n        <ContentWrapper>\r\n          <Sticky top={0} innerZ={9999} activeClass=\"sticky-nav-active\">\r\n            <DrawerProvider>\r\n              <Navbar />\r\n            </DrawerProvider>\r\n          </Sticky>\r\n          <BannerSection />\r\n          <ProcessSection />\r\n          <SkillSection />\r\n          <FeatureSection />\r\n          <VisitorSection />\r\n          <ServiceSection />\r\n          <PricingSection />\r\n          <TestimonialSection />\r\n          <PartnerSection />\r\n          <TimelineSection />\r\n          <FaqSection />\r\n          <TrialSection />\r\n          <Footer />\r\n        </ContentWrapper>\r\n      </Fragment>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCA;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AA7DA;AAmEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChLA;AAEA;AAOA;AAeA;AAeA;AAEA;AAcA;AAiBA;;;;;;;;;;;;ACxhrGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}